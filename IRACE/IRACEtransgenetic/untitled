void RandomWalk(bool unionGraph[NUMEROVERTICES][NUMEROVERTICES]){
	int v = rg->IRandom(0, NUMEROVERTICES-1); // vertice inicial
	int cont = 0;
	bool isVisitado[NUMEROVERTICES];
	for (int i=0; i<NUMEROVERTICES; i++)isVisitado[i] = false;
	isVisitado[v] = true;
	while (cont<NUMEROVERTICES-1){
		vector<int> verticesAdjacentes;
		//olha os vizinhos de v
		for (int i=0; i<NUMEROVERTICES; i++){
			if (unionGraph[i][v]==true){
				if (isVisitado[vprox] == false){//agora verificamos se o vertice vizinho nao foi vizitado
					verticesAdjacentes.push_back(i);
				}
			}
		}

		if (verticesAdjacentes.size()>0){
			int viz = rg->IRandom(0, verticesAdjacentes.size()-1);
			if (v<viz) {
	            edges[cont][0] = v;
	            edges[cont][1] = viz;
	        } else {
	        	edges[cont][0] = viz;
	            edges[cont][1] = v;
	        }
			isVisitado[viz] = true;
			v = viz;
		}
	}
} 